package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// CssStyle returns raw, uncompressed file data.
func CssStyle() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x6c,0x90,
0xcd,0x6e,0xc3,0x20,0x0c,0xc7,0xef,0x3c,0x05,0xd2,0xb4,0x23,
0x51,0xda,0x23,0x3d,0xe7,0x39,0x2a,0x08,0x2e,0x41,0x03,0x1b,
0x11,0x47,0xcd,0x36,0xed,0xdd,0x47,0x3e,0xba,0xe4,0x30,0x6e,
0x58,0xbf,0xff,0x87,0xcd,0xc6,0x46,0x10,0xdf,0x42,0xd6,0xf7,
0x0c,0x8e,0x07,0x2d,0x2f,0x6d,0xfb,0x7e,0x5b,0x07,0x96,0x8a,
0x83,0xa2,0x25,0x12,0xc2,0x4d,0xfc,0x88,0x15,0x96,0xec,0x2a,
0xff,0xf7,0x19,0x76,0x31,0xc3,0xcc,0xca,0xc4,0xe0,0x51,0xcb,
0x08,0x0f,0x3e,0xf1,0x03,0x18,0xb7,0x53,0xd6,0xf4,0x1f,0xbe,
0xd0,0x84,0x4e,0xf5,0x14,0xa9,0x7a,0xbf,0x75,0x5d,0xb7,0xb0,
0x3b,0xdc,0x14,0xc8,0x34,0x06,0xa6,0xf2,0x79,0x47,0x93,0x5e,
0xd5,0xb6,0x26,0xca,0x12,0x33,0xa5,0x5a,0x31,0xcf,0x72,0xa4,
0x18,0x9c,0xb4,0xb1,0x3a,0x9e,0xf4,0x6b,0xd8,0xd1,0xea,0x41,
0xc8,0x6a,0x0c,0x5f,0x50,0x35,0xcd,0x15,0xd2,0xb6,0x57,0x3f,
0x95,0x71,0xc9,0xce,0x14,0x90,0xa1,0xfc,0x23,0x97,0x76,0xaa,
0x49,0x78,0x76,0x79,0x42,0xf0,0x03,0xeb,0x5a,0x25,0xba,0xcd,
0x26,0x99,0xe2,0x03,0xaa,0xb2,0xcd,0x2f,0x8b,0xfb,0x71,0xa3,
0x26,0x4f,0x31,0xde,0xfb,0xf4,0xda,0x3c,0x1b,0xe7,0x02,0x7a,
0xb5,0xdc,0x46,0xcb,0x6b,0x9b,0xe7,0x35,0x56,0x88,0xdf,0x00,
0x00,0x00,0xff,0xff,0x53,0x43,0x65,0x5e,0x82,0x01,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}