package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// JsScript returns raw, uncompressed file data.
func JsScript() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x84,0x90,
0x4d,0x6e,0x03,0x21,0x0c,0x85,0xf7,0x3d,0x05,0x4d,0xb3,0xc0,
0x9b,0xb9,0x40,0xd4,0x5d,0x2f,0xd0,0x13,0x44,0x14,0x4c,0xa0,
0x25,0x10,0x81,0x49,0x8b,0xaa,0xdc,0xbd,0x30,0x68,0xfe,0x16,
0x4d,0xbc,0x00,0x64,0xf4,0x3d,0x3f,0xbf,0xcf,0xf7,0x8c,0xb1,
0x70,0x15,0x64,0x3e,0xa3,0x27,0x18,0x22,0x0a,0x55,0xb8,0xce,
0x5e,0x92,0x0d,0x9e,0x03,0xfb,0x7d,0x62,0xb5,0xae,0x22,0xb2,
0x64,0xc2,0xb7,0x7f,0xd5,0xc2,0x25,0x3c,0x8c,0xcd,0x3d,0xdf,
0xd1,0x47,0x50,0x65,0x07,0x03,0x0a,0x69,0x66,0x8a,0x35,0x6c,
0xcf,0xc9,0xd8,0x04,0x83,0xb1,0x0a,0x39,0xdc,0x60,0x46,0x5e,
0x9a,0xce,0x51,0x38,0x57,0x31,0xe9,0xac,0xfc,0x5a,0xa6,0x21,
0xf4,0x69,0xf7,0xc4,0x67,0x4b,0x53,0x59,0xcd,0xf8,0x68,0x0d,
0x36,0xed,0xae,0xb1,0xf6,0x70,0xd8,0xfc,0x63,0x5d,0xe3,0x5f,
0xa0,0xe9,0xad,0x81,0xdb,0xea,0xdd,0x63,0x78,0x1e,0xaf,0xa5,
0x8b,0xc3,0x25,0xe2,0xb5,0x46,0xf8,0x86,0x5a,0x64,0x47,0x13,
0xdd,0xc8,0x69,0xf3,0x1a,0xee,0x25,0x24,0x4b,0x21,0x96,0xa3,
0x17,0x67,0x7c,0x14,0x40,0xf7,0xe2,0xf1,0x87,0x96,0x2c,0x28,
0x9c,0x4e,0x6e,0xb3,0xcc,0xdd,0xc9,0xed,0xf8,0x0b,0x00,0x00,
0xff,0xff,0x40,0xb1,0xdd,0x15,0xe4,0x01,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}